import org.openrs2.deob.annotation.OriginalArg;
import org.openrs2.deob.annotation.OriginalMember;
import org.openrs2.deob.annotation.Pc;

public final class Static127 {

	@OriginalMember(owner = "client!mj", name = "c", descriptor = "I")
	public static int anInt2808;

	@OriginalMember(owner = "client!mj", name = "h", descriptor = "Lclient!pb;")
	public static Class71 aClass71_25;

	@OriginalMember(owner = "client!mj", name = "l", descriptor = "Lclient!ig;")
	public static Class46 aClass46_1;

	@OriginalMember(owner = "client!mj", name = "m", descriptor = "I")
	public static int anInt2813;

	@OriginalMember(owner = "client!mj", name = "k", descriptor = "Lclient!mb;")
	private static final Class62 aClass62_989 = Static151.method2243("Members only world");

	@OriginalMember(owner = "client!mj", name = "a", descriptor = "Lclient!mb;")
	public static Class62 aClass62_988 = aClass62_989;

	@OriginalMember(owner = "client!mj", name = "b", descriptor = "I")
	public static int anInt2807 = -1;

	@OriginalMember(owner = "client!mj", name = "f", descriptor = "[[I")
	public static final int[][] anIntArrayArray20 = new int[][] { { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }, { 12, 8, 4, 0, 13, 9, 5, 1, 14, 10, 6, 2, 15, 11, 7, 3 }, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }, { 3, 7, 11, 15, 2, 6, 10, 14, 1, 5, 9, 13, 0, 4, 8, 12 } };

	@OriginalMember(owner = "client!mj", name = "i", descriptor = "[[S")
	public static final short[][] aShortArrayArray2 = new short[][] { { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 4, 12, 24, 37, 49, 61, 74, 86, -25437, -26445, -27450, 9694, 21824, 123, 111, 99, 17814, 16801, 17837, 16697, 7341, 7496, 5330, 7384, 5268, 3230, 2223, 72, 10277, 8377, 8394, 7384, -22370, -22221, -22196, -22314, -29637, -27434, -29604, -25491, 662, 796, 933, 819, 10258, 6430, 5425, 5314, 10917, 10925, 10935, 10471, 10258, 10524, 10415, 10301, -11108, -11093, -11203, -8034, -5839, -6836, -5934, -32674, -14444, -15455, -15697, -15557, -15424, -11622, -11601, -11450, 7054, 7079, 5056, 6988, 8481, -30054, -30159, -30019, -21734, -21845, -21707, -21690, -21564, -24921, -24775, -24640, 662, 794, 811, 945, 827, 957, 5425, 5314, 11032, 10921, 11183, 11069, 11200, 4775, 3891, 3904, -18792, -19799, -20807, -20677, -20534, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 20366, 21274, 21415, 20401, 6569, 7613, 7630, 6364, 4300, 8412, 3294, 4193, 3303, 123, 111, 99, 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, 14990, 14746, 15779, 15795, 15944, 662, 796, 941, 951, 148, 6936, 5675, 5440, 10014, 11179, 11197, 10894, 10776, 10661, 10795, 10419, -10984, -11095, -11072, 12998, 12731, 11718, -6838, -32318, 4, 12, 24, 37, 49, 61, 74, 86 }, { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 4, 12, 24, 37, 49, 61, 74, 86, -25437, -26445, -27450, 9694, 21824, 123, 111, 99, 17814, 16801, 17837, 16697, 7341, 7496, 5330, 7384, 5268, 3230, 2223, 72, 10277, 8377, 8394, 7384, -22370, -22221, -22196, -22314, -29637, -27434, -29604, -25491, 662, 796, 933, 819, 10258, 6430, 5425, 5314, 10917, 10925, 10935, 10471, 10258, 10524, 10415, 10301, -11108, -11093, -11203, -8034, -5839, -6836, -5934, -32674, -14444, -15455, -15697, -15557, -15424, -11622, -11601, -11450, 7054, 7079, 5056, 6988, 8481, -30054, -30159, -30019, -21734, -21845, -21707, -21690, -21564, -24921, -24775, -24640, 662, 794, 811, 945, 827, 957, 5425, 5314, 11032, 10921, 11183, 11069, 11200, 4775, 3891, 3904, -18792, -19799, -20807, -20677, -20534, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 20366, 21274, 21415, 20401, 6569, 7613, 7630, 6364, 4300, 8412, 3294, 4193, 3303, 123, 111, 99, 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, 14990, 14746, 15779, 15795, 15944, 662, 796, 941, 951, 148, 6936, 5675, 5440, 10014, 11179, 11197, 10894, 10776, 10661, 10795, 10419, -10984, -11095, -11072, 12998, 12731, 11718, -6838, -32318, 4, 12, 24, 37, 49, 61, 74, 86 }, { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 4, 12, 24, 37, 49, 61, 74, 86, -25437, -26445, -27450, 9694, 21824, 123, 111, 99, 17814, 16801, 17837, 16697, 7341, 7496, 5330, 7384, 5268, 3230, 2223, 72, 10277, 8377, 8394, 7384, -22370, -22221, -22196, -22314, -29637, -27434, -29604, -25491, 662, 796, 933, 819, 10258, 6430, 5425, 5314, 10917, 10925, 10935, 10471, 10258, 10524, 10415, 10301, -11108, -11093, -11203, -8034, -5839, -6836, -5934, -32674, -14444, -15455, -15697, -15557, -15424, -11622, -11601, -11450, 7054, 7079, 5056, 6988, 8481, -30054, -30159, -30019, -21734, -21845, -21707, -21690, -21564, -24921, -24775, -24640, 662, 794, 811, 945, 827, 957, 5425, 5314, 11032, 10921, 11183, 11069, 11200, 4775, 3891, 3904, -18792, -19799, -20807, -20677, -20534, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 20366, 21274, 21415, 20401, 6569, 7613, 7630, 6364, 4300, 8412, 3294, 4193, 3303, 123, 111, 99, 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, 14990, 14746, 15779, 15795, 15944, 662, 796, 941, 951, 148, 6936, 5675, 5440, 10014, 11179, 11197, 10894, 10776, 10661, 10795, 10419, -10984, -11095, -11072, 12998, 12731, 11718, -6838, -32318, 4, 12, 24, 37, 49, 61, 74, 86 }, { 4300, 3294, 3303, 3264, 4506, 4382, 4387, 5293, 7622, 7384, 8412, 7496, 86, 123, 111, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 12, 24, 37, 49, 61, 74, 86, -25437, -26445, -27450, 9694, 21824, 123, 111, 99, 17814, 16801, 17837, 16697, 7341, 7496, 5330, 7384, 5268, 3230, 2223, 72, 10277, 8377, 8394, 7384, -22370, -22221, -22196, -22314, -29637, -27434, -29604, -25491, 662, 796, 933, 819, 10258, 6430, 5425, 5314, 10917, 10925, 10935, 10471, 10258, 10524, 10415, 10301, -11108, -11093, -11203, -8034, -5839, -6836, -5934, -32674, -14444, -15455, -15697, -15557, -15424, -11622, -11601, -11450, 7054, 7079, 5056, 6988, 8481, -30054, -30159, -30019, -21734, -21845, -21707, -21690, -21564, -24921, -24775, -24640, 662, 794, 811, 945, 827, 957, 5425, 5314, 11032, 10921, 11183, 11069, 11200, 4775, 3891, 3904, -18792, -19799, -20807, -20677, -20534, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 20366, 21274, 21415, 20401, 6569, 7613, 7630, 6364, 4300, 8412, 3294, 4193, 3303, 123, 111, 99, 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, 14990, 14746, 15779, 15795, 15944, 662, 796, 941, 951, 148, 6936, 5675, 5440, 10014, 11179, 11197, 10894, 10776, 10661, 10795, 10419, -10984, -11095, -11072, 12998, 12731, 11718, -6838, -32318, 4, 12, 24, 37, 49, 61, 74, 86 }, { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 22461, -21571, 11200, 957, -10317, 5056, -31808, 123, 22453, -21579, 11191, 949, -10325, 4023, -31817, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20366, 20401, 662, 827, 7054, 5056, -21734, -21564, -14444, -15424, 11032, 11200, 4, 123, 61, -18792, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4300, 3294, 3303, 3264, 4506, 4382, 4387, 5293, 8412, 8301, 8076, 6936, 5675, 941, 5056, 15795, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } };

	@OriginalMember(owner = "client!mj", name = "n", descriptor = "I")
	public static int anInt2814 = 0;

	@OriginalMember(owner = "client!mj", name = "a", descriptor = "(I)[Lclient!bf;")
	public static Class2_Sub1_Sub2_Sub1[] method1981() {
		@Pc(8) Class2_Sub1_Sub2_Sub1[] local8 = new Class2_Sub1_Sub2_Sub1[Static208.anInt4345];
		for (@Pc(10) int local10 = 0; local10 < Static208.anInt4345; local10++) {
			@Pc(16) byte[] local16 = Static8.aByteArrayArray1[local10];
			@Pc(24) int local24 = Static138.anIntArray256[local10] * Static86.anIntArray298[local10];
			@Pc(27) int[] local27 = new int[local24];
			for (@Pc(29) int local29 = 0; local29 < local24; local29++) {
				local27[local29] = Static108.anIntArray222[local16[local29] & 0xFF];
			}
			local8[local10] = new Class2_Sub1_Sub2_Sub1(Static138.anInt2900, anInt2808, Static19.anIntArray38[local10], Static25.anIntArray57[local10], Static86.anIntArray298[local10], Static138.anIntArray256[local10], local27);
		}
		Static169.method2456();
		return local8;
	}

	@OriginalMember(owner = "client!mj", name = "a", descriptor = "(BIIIIII)V")
	public static void method1982(@OriginalArg(1) int arg0, @OriginalArg(2) int arg1, @OriginalArg(3) int arg2, @OriginalArg(4) int arg3, @OriginalArg(5) int arg4, @OriginalArg(6) int arg5) {
		@Pc(3) int local3 = 0;
		Static51.method770(arg1);
		@Pc(14) int local14 = arg1 - arg0;
		@Pc(16) int local16 = arg1;
		if (local14 < 0) {
			local14 = 0;
		}
		@Pc(26) int local26 = -local14;
		@Pc(29) int local29 = -arg1;
		@Pc(31) int local31 = local14;
		@Pc(33) int local33 = -1;
		@Pc(35) int local35 = -1;
		@Pc(39) int[] local39 = Static55.anIntArrayArray8[arg2];
		@Pc(44) int local44 = arg3 - local14;
		Static19.method345(arg4, local39, arg3 - arg1, local44);
		@Pc(68) int local68 = arg3 + local14;
		Static19.method345(arg5, local39, local44, local68);
		Static19.method345(arg4, local39, local68, arg1 + arg3);
		while (local16 > local3) {
			local35 += 2;
			local33 += 2;
			local29 += local33;
			local26 += local35;
			if (local26 >= 0 && local31 >= 1) {
				Static128.anIntArray13[local31] = local3;
				local31--;
				local26 -= local31 << 1;
			}
			local3++;
			@Pc(151) int[] local151;
			@Pc(135) int[] local135;
			@Pc(139) int local139;
			@Pc(144) int local144;
			@Pc(196) int local196;
			@Pc(191) int local191;
			@Pc(201) int local201;
			if (local29 >= 0) {
				local16--;
				if (local16 >= local14) {
					local135 = Static55.anIntArrayArray8[arg2 - local16];
					local139 = local3 + arg3;
					local144 = arg3 - local3;
					local151 = Static55.anIntArrayArray8[arg2 + local16];
					Static19.method345(arg4, local151, local144, local139);
					Static19.method345(arg4, local135, local144, local139);
				} else {
					local151 = Static55.anIntArrayArray8[arg2 + local16];
					local135 = Static55.anIntArrayArray8[arg2 - local16];
					local144 = local3 + arg3;
					local139 = Static128.anIntArray13[local16];
					local191 = arg3 + local139;
					local196 = arg3 - local3;
					local201 = arg3 - local139;
					Static19.method345(arg4, local151, local196, local201);
					Static19.method345(arg5, local151, local201, local191);
					Static19.method345(arg4, local151, local191, local144);
					Static19.method345(arg4, local135, local196, local201);
					Static19.method345(arg5, local135, local201, local191);
					Static19.method345(arg4, local135, local191, local144);
				}
				local29 -= local16 << 1;
			}
			local151 = Static55.anIntArrayArray8[arg2 + local3];
			local135 = Static55.anIntArrayArray8[arg2 - local3];
			local144 = arg3 - local16;
			local139 = arg3 + local16;
			if (local3 >= local14) {
				Static19.method345(arg4, local151, local144, local139);
				Static19.method345(arg4, local135, local144, local139);
			} else {
				local196 = local3 <= local31 ? local31 : Static128.anIntArray13[local3];
				local191 = arg3 + local196;
				local201 = arg3 - local196;
				Static19.method345(arg4, local151, local144, local201);
				Static19.method345(arg5, local151, local201, local191);
				Static19.method345(arg4, local151, local191, local139);
				Static19.method345(arg4, local135, local144, local201);
				Static19.method345(arg5, local135, local201, local191);
				Static19.method345(arg4, local135, local191, local139);
			}
		}
	}

	@OriginalMember(owner = "client!mj", name = "a", descriptor = "(IIBLclient!pb;)Lclient!hh;")
	public static Class42 method1983(@OriginalArg(1) int arg0, @OriginalArg(3) Class71 arg1) {
		return Static157.method2317(arg0, arg1, 0) ? Static32.method560() : null;
	}

	@OriginalMember(owner = "client!mj", name = "a", descriptor = "(III)I")
	public static int method1984(@OriginalArg(1) int arg0, @OriginalArg(2) int arg1) {
		if (arg0 > 22050) {
			arg1 = arg0;
			arg0 = 22050;
		}
		while (arg0 != 0) {
			@Pc(16) int local16 = arg1 % arg0;
			arg1 = arg0;
			arg0 = local16;
		}
		return arg1;
	}
}
