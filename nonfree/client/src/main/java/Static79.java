import org.openrs2.deob.annotation.OriginalArg;
import org.openrs2.deob.annotation.OriginalMember;
import org.openrs2.deob.annotation.Pc;

public final class Static79 {

	@OriginalMember(owner = "client!fk", name = "a", descriptor = "I")
	public static int anInt2909;

	@OriginalMember(owner = "client!fk", name = "b", descriptor = "Lclient!ak;")
	public static Class7 aClass7_130;

	@OriginalMember(owner = "client!fk", name = "e", descriptor = "Lclient!ak;")
	public static Class7 aClass7_131;

	@OriginalMember(owner = "client!fk", name = "t", descriptor = "Lclient!ak;")
	public static Class7 aClass7_132;

	@OriginalMember(owner = "client!fk", name = "g", descriptor = "I")
	public static int anInt2913 = 2301979;

	@OriginalMember(owner = "client!fk", name = "h", descriptor = "[[S")
	public static short[][] aShortArrayArray11 = new short[][] { { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898 }, { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10347, 10582, 10429, 10407, 10359, 8414, 9540, 10456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898 }, { 4300, 3294, 3303, 3264, 4506, 4382, 4387, 5293, 7622, 7384, 8412, 7496, 86, 123, 111, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 13766, 13745, 13726, 13890, 13743, 13852, 17602, 18605, 21660, 24000, 24997, 24088, 27972, 25903, 26904, 27193, 27175, 27156, 30020, 28975, 29976, 12482, 13485, 10392, 10692, 10669, 10776, 6717, 6695, 7830, 6971, 6951, 5910, 3389, 3369, 3356, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898 } };

	@OriginalMember(owner = "client!fk", name = "i", descriptor = "[B")
	public static byte[] aByteArray62 = new byte[520];

	@OriginalMember(owner = "client!fk", name = "s", descriptor = "Ljava/lang/String;")
	public static String aString101 = "flash2:";

	@OriginalMember(owner = "client!fk", name = "a", descriptor = "(B)I")
	public static int method2428() {
		if (Static166.aClass50_2 == null) {
			return -1;
		}
		while (Static269.anInt5395 < Static166.aClass50_2.anInt1409) {
			if (Static166.aClass50_2.method1171(Static269.anInt5395)) {
				return Static269.anInt5395++;
			}
			Static269.anInt5395++;
		}
		return -1;
	}

	@OriginalMember(owner = "client!fk", name = "a", descriptor = "(IIII)V")
	public static void method2431(@OriginalArg(0) int arg0, @OriginalArg(2) int arg1, @OriginalArg(3) int arg2) {
		@Pc(14) Class1_Sub2_Sub11 local14 = Static163.method3579(9, arg0);
		local14.method1859();
		local14.anInt2282 = arg1;
		local14.anInt2279 = arg2;
	}

	@OriginalMember(owner = "client!fk", name = "a", descriptor = "()V")
	public static void method2432() {
		Static149.anInt2777 = 0;
		label194: for (@Pc(3) int local3 = 0; local3 < Static245.anInt1244; local3++) {
			@Pc(10) Class114 local10 = Static73.aClass114Array1[local3];
			@Pc(14) int local14;
			if (Static235.anIntArray574 != null) {
				for (local14 = 0; local14 < Static235.anIntArray574.length; local14++) {
					if (Static235.anIntArray574[local14] != -1000000 && (local10.anInt3058 <= Static235.anIntArray574[local14] || local10.anInt3045 <= Static235.anIntArray574[local14]) && (local10.anInt3042 <= Static43.anIntArray128[local14] || local10.anInt3055 <= Static43.anIntArray128[local14]) && (local10.anInt3042 >= Static253.anIntArray601[local14] || local10.anInt3055 >= Static253.anIntArray601[local14]) && (local10.anInt3044 <= Static288.anIntArray677[local14] || local10.anInt3062 <= Static288.anIntArray677[local14]) && (local10.anInt3044 >= Static243.anIntArray587[local14] || local10.anInt3062 >= Static243.anIntArray587[local14])) {
						continue label194;
					}
				}
			}
			@Pc(115) int local115;
			@Pc(126) int local126;
			@Pc(158) int local158;
			@Pc(137) boolean local137;
			if (local10.anInt3050 == 1) {
				local14 = local10.anInt3049 + Static167.anInt3094 - Static120.anInt2321;
				if (local14 >= 0 && local14 <= Static167.anInt3094 + Static167.anInt3094) {
					local115 = local10.anInt3064 + Static167.anInt3094 - Static20.anInt458;
					if (local115 < 0) {
						local115 = 0;
					}
					local126 = local10.anInt3048 + Static167.anInt3094 - Static20.anInt458;
					if (local126 > Static167.anInt3094 + Static167.anInt3094) {
						local126 = Static167.anInt3094 + Static167.anInt3094;
					}
					local137 = false;
					while (local115 <= local126) {
						if (Static217.aBooleanArrayArray10[local14][local115++]) {
							local137 = true;
							break;
						}
					}
					if (local137) {
						local158 = Static3.anInt142 - local10.anInt3042;
						if (local158 > 32) {
							local10.anInt3063 = 1;
						} else {
							if (local158 >= -32) {
								continue;
							}
							local10.anInt3063 = 2;
							local158 = -local158;
						}
						local10.anInt3052 = (local10.anInt3044 - Static12.anInt356 << 8) / local158;
						local10.anInt3066 = (local10.anInt3062 - Static12.anInt356 << 8) / local158;
						local10.anInt3051 = (local10.anInt3058 - Static254.anInt5887 << 8) / local158;
						local10.anInt3061 = (local10.anInt3045 - Static254.anInt5887 << 8) / local158;
						Static174.aClass114Array2[Static149.anInt2777++] = local10;
					}
				}
			} else if (local10.anInt3050 == 2) {
				local14 = local10.anInt3064 + Static167.anInt3094 - Static20.anInt458;
				if (local14 >= 0 && local14 <= Static167.anInt3094 + Static167.anInt3094) {
					local115 = local10.anInt3049 + Static167.anInt3094 - Static120.anInt2321;
					if (local115 < 0) {
						local115 = 0;
					}
					local126 = local10.anInt3043 + Static167.anInt3094 - Static120.anInt2321;
					if (local126 > Static167.anInt3094 + Static167.anInt3094) {
						local126 = Static167.anInt3094 + Static167.anInt3094;
					}
					local137 = false;
					while (local115 <= local126) {
						if (Static217.aBooleanArrayArray10[local115++][local14]) {
							local137 = true;
							break;
						}
					}
					if (local137) {
						local158 = Static12.anInt356 - local10.anInt3044;
						if (local158 > 32) {
							local10.anInt3063 = 3;
						} else {
							if (local158 >= -32) {
								continue;
							}
							local10.anInt3063 = 4;
							local158 = -local158;
						}
						local10.anInt3057 = (local10.anInt3042 - Static3.anInt142 << 8) / local158;
						local10.anInt3053 = (local10.anInt3055 - Static3.anInt142 << 8) / local158;
						local10.anInt3051 = (local10.anInt3058 - Static254.anInt5887 << 8) / local158;
						local10.anInt3061 = (local10.anInt3045 - Static254.anInt5887 << 8) / local158;
						Static174.aClass114Array2[Static149.anInt2777++] = local10;
					}
				}
			} else if (local10.anInt3050 == 4) {
				local14 = local10.anInt3058 - Static254.anInt5887;
				if (local14 > 128) {
					local115 = local10.anInt3064 + Static167.anInt3094 - Static20.anInt458;
					if (local115 < 0) {
						local115 = 0;
					}
					local126 = local10.anInt3048 + Static167.anInt3094 - Static20.anInt458;
					if (local126 > Static167.anInt3094 + Static167.anInt3094) {
						local126 = Static167.anInt3094 + Static167.anInt3094;
					}
					if (local115 <= local126) {
						@Pc(408) int local408 = local10.anInt3049 + Static167.anInt3094 - Static120.anInt2321;
						if (local408 < 0) {
							local408 = 0;
						}
						local158 = local10.anInt3043 + Static167.anInt3094 - Static120.anInt2321;
						if (local158 > Static167.anInt3094 + Static167.anInt3094) {
							local158 = Static167.anInt3094 + Static167.anInt3094;
						}
						@Pc(430) boolean local430 = false;
						label166: for (@Pc(432) int local432 = local408; local432 <= local158; local432++) {
							for (@Pc(437) int local437 = local115; local437 <= local126; local437++) {
								if (Static217.aBooleanArrayArray10[local432][local437]) {
									local430 = true;
									break label166;
								}
							}
						}
						if (local430) {
							local10.anInt3063 = 5;
							local10.anInt3057 = (local10.anInt3042 - Static3.anInt142 << 8) / local14;
							local10.anInt3053 = (local10.anInt3055 - Static3.anInt142 << 8) / local14;
							local10.anInt3052 = (local10.anInt3044 - Static12.anInt356 << 8) / local14;
							local10.anInt3066 = (local10.anInt3062 - Static12.anInt356 << 8) / local14;
							Static174.aClass114Array2[Static149.anInt2777++] = local10;
						}
					}
				}
			}
		}
	}
}
