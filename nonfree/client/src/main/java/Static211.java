import org.openrs2.deob.annotation.OriginalArg;
import org.openrs2.deob.annotation.OriginalMember;
import org.openrs2.deob.annotation.Pc;

public final class Static211 {

	@OriginalMember(owner = "client!ma", name = "cb", descriptor = "[Ljava/lang/String;")
	public static String[] aStringArray22;

	@OriginalMember(owner = "client!ma", name = "X", descriptor = "Lclient!fn;")
	public static final Class77 aClass77_102 = new Class77(56, -1);

	@OriginalMember(owner = "client!ma", name = "Y", descriptor = "[[S")
	public static final short[][] aShortArrayArray28 = new short[][] { { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898 }, { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10347, 10582, 10429, 10407, 10359, 8414, 9540, 10456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898 }, { 4300, 3294, 3303, 3264, 4506, 4382, 4387, 5293, 7622, 7384, 8412, 7496, 86, 123, 111, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 13766, 13745, 13726, 13890, 13743, 13852, 17602, 18605, 21660, 24000, 24997, 24088, 27972, 25903, 26904, 27193, 27175, 27156, 30020, 28975, 29976, 12482, 13485, 10392, 10692, 10669, 10776, 6717, 6695, 7830, 6971, 6951, 5910, 3389, 3369, 3356, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898 } };

	@OriginalMember(owner = "client!ma", name = "bb", descriptor = "Lclient!tm;")
	public static final Class221 aClass221_133 = new Class221("Please wait...", "Bitte warte...", "Veuillez patienter...", "Aguarde...");

	@OriginalMember(owner = "client!ma", name = "db", descriptor = "[[I")
	public static final int[][] anIntArrayArray25 = new int[][] { { 12, 12, 12, 12 }, { 12, 12, 12, 12 }, { 5, 5, 5 }, { 5, 5, 5 }, { 5, 5, 5 }, { 5, 5, 5 }, { 12, 12, 12, 12, 12, 12 }, { 1, 1, 1, 7 }, { 1, 1, 7, 1 }, { 8, 9, 9, 8, 8, 9 }, { 8, 8, 9, 8, 9, 9 }, { 10, 10, 11, 11, 11, 10 }, { 12, 12, 12, 12 } };

	@OriginalMember(owner = "client!ma", name = "a", descriptor = "(IIIILclient!es;)V")
	public static void method3583(@OriginalArg(0) int arg0, @OriginalArg(2) int arg1, @OriginalArg(3) int arg2, @OriginalArg(4) Class12_Sub1_Sub2 arg3) {
		@Pc(17) Class170 local17 = arg3.method4711();
		@Pc(26) int local26 = arg3.anInt5328 - arg3.aClass32_7.anInt740 & 0x3FFF;
		if (arg1 == -1) {
			if (local26 != 0 || arg3.anInt5348 > 25) {
				arg3.aBoolean422 = false;
				if (arg2 < 0 && local17.anInt4563 != -1) {
					arg3.anInt5339 = local17.anInt4563;
				} else if (arg2 <= 0 || local17.anInt4529 == -1) {
					arg3.anInt5339 = local17.anInt4558;
				} else {
					arg3.anInt5339 = local17.anInt4529;
				}
			} else if (!arg3.aBoolean422 || !local17.method4016(arg3.anInt5339)) {
				arg3.anInt5339 = local17.method4009();
				arg3.aBoolean422 = arg3.anInt5339 != -1;
			}
		} else if (arg3.anInt5345 != -1 && (local26 >= 10240 || local26 <= 2048)) {
			@Pc(55) int local55 = Static50.anIntArray141[arg0] - arg3.aClass32_7.anInt740 & 0x3FFF;
			if (arg1 == 2 && local17.anInt4562 != -1) {
				if (local55 > 2048 && local55 <= 6144 && local17.anInt4566 != -1) {
					arg3.anInt5339 = local17.anInt4566;
				} else if (local55 >= 10240 && local55 < 14336 && local17.anInt4535 != -1) {
					arg3.anInt5339 = local17.anInt4535;
				} else if (local55 <= 6144 || local55 >= 10240 || local17.anInt4530 == -1) {
					arg3.anInt5339 = local17.anInt4562;
				} else {
					arg3.anInt5339 = local17.anInt4530;
				}
			} else if (arg1 == 0 && local17.anInt4564 != -1) {
				if (local55 > 2048 && local55 <= 6144 && local17.anInt4546 != -1) {
					arg3.anInt5339 = local17.anInt4546;
				} else if (local55 >= 10240 && local55 < 14336 && local17.anInt4533 != -1) {
					arg3.anInt5339 = local17.anInt4533;
				} else if (local55 <= 6144 || local55 >= 10240 || local17.anInt4569 == -1) {
					arg3.anInt5339 = local17.anInt4564;
				} else {
					arg3.anInt5339 = local17.anInt4569;
				}
			} else if (local55 > 2048 && local55 <= 6144 && local17.anInt4565 != -1) {
				arg3.anInt5339 = local17.anInt4565;
			} else if (local55 >= 10240 && local55 < 14336 && local17.anInt4553 != -1) {
				arg3.anInt5339 = local17.anInt4553;
			} else if (local55 <= 6144 || local55 >= 10240 || local17.anInt4536 == -1) {
				arg3.anInt5339 = local17.anInt4558;
			} else {
				arg3.anInt5339 = local17.anInt4536;
			}
			arg3.aBoolean422 = false;
		} else if (local26 == 0 && arg3.anInt5348 <= 25) {
			if (arg1 == 2 && local17.anInt4562 != -1) {
				arg3.anInt5339 = local17.anInt4562;
			} else if (arg1 == 0 && local17.anInt4564 != -1) {
				arg3.anInt5339 = local17.anInt4564;
			} else {
				arg3.anInt5339 = local17.anInt4558;
			}
			arg3.aBoolean422 = false;
		} else {
			if (arg1 == 2 && local17.anInt4562 != -1) {
				if (arg2 < 0 && local17.anInt4560 != -1) {
					arg3.anInt5339 = local17.anInt4560;
				} else if (arg2 <= 0 || local17.anInt4549 == -1) {
					arg3.anInt5339 = local17.anInt4562;
				} else {
					arg3.anInt5339 = local17.anInt4549;
				}
			} else if (arg1 == 0 && local17.anInt4564 != -1) {
				if (arg2 < 0 && local17.anInt4568 != -1) {
					arg3.anInt5339 = local17.anInt4568;
				} else if (arg2 <= 0 || local17.anInt4556 == -1) {
					arg3.anInt5339 = local17.anInt4564;
				} else {
					arg3.anInt5339 = local17.anInt4556;
				}
			} else if (arg2 < 0 && local17.anInt4547 != -1) {
				arg3.anInt5339 = local17.anInt4547;
			} else if (arg2 <= 0 || local17.anInt4571 == -1) {
				arg3.anInt5339 = local17.anInt4558;
			} else {
				arg3.anInt5339 = local17.anInt4571;
			}
			arg3.aBoolean422 = false;
		}
	}

	@OriginalMember(owner = "client!ma", name = "a", descriptor = "(Lclient!ca;ZIII)V")
	public static void method3584(@OriginalArg(0) Class2_Sub8 arg0, @OriginalArg(2) int arg1, @OriginalArg(3) int arg2, @OriginalArg(4) int arg3) {
		@Pc(16) long local16 = (long) (arg2 | arg3 << 28 | arg1 << 14);
		@Pc(22) Class2_Sub5 local22 = (Class2_Sub5) Static147.aClass214_14.method5059(local16);
		if (local22 == null) {
			local22 = new Class2_Sub5();
			Static147.aClass214_14.method5065(local16, local22);
			local22.aClass210_5.method5044(arg0);
			return;
		}
		@Pc(50) Class117 local50 = Static106.aClass250_1.method5735(arg0.anInt683);
		@Pc(53) int local53 = local50.anInt2864;
		if (local50.anInt2872 == 1) {
			local53 *= arg0.anInt687 + 1;
		}
		for (@Pc(72) Class2_Sub8 local72 = (Class2_Sub8) local22.aClass210_5.method5035(); local72 != null; local72 = (Class2_Sub8) local22.aClass210_5.method5037()) {
			local50 = Static106.aClass250_1.method5735(local72.anInt683);
			@Pc(83) int local83 = local50.anInt2864;
			if (local50.anInt2872 == 1) {
				local83 *= local72.anInt687 + 1;
			}
			if (local53 > local83) {
				Static335.method5120(arg0, local72);
				return;
			}
		}
		local22.aClass210_5.method5044(arg0);
	}

	@OriginalMember(owner = "client!ma", name = "a", descriptor = "(IIIIIII)V")
	public static void method3586(@OriginalArg(0) int arg0, @OriginalArg(2) int arg1, @OriginalArg(3) int arg2, @OriginalArg(4) int arg3, @OriginalArg(5) int arg4, @OriginalArg(6) int arg5) {
		Static69.method1260(arg5);
		@Pc(10) int local10 = 0;
		@Pc(15) int local15 = arg5 - arg1;
		if (local15 < 0) {
			local15 = 0;
		}
		@Pc(24) int local24 = arg5;
		@Pc(27) int local27 = -arg5;
		@Pc(29) int local29 = local15;
		@Pc(41) int local41 = -local15;
		@Pc(43) int local43 = -1;
		@Pc(45) int local45 = -1;
		@Pc(49) int[] local49 = Static267.anIntArrayArray38[arg2];
		@Pc(54) int local54 = arg4 - local15;
		@Pc(58) int local58 = arg4 + local15;
		Static264.method4096(local49, arg0, local54, arg4 - arg5);
		Static264.method4096(local49, arg3, local58, local54);
		Static264.method4096(local49, arg0, arg4 + arg5, local58);
		while (local10 < local24) {
			local45 += 2;
			local43 += 2;
			local27 += local43;
			local41 += local45;
			if (local41 >= 0 && local29 >= 1) {
				Static41.anIntArray129[local29] = local10;
				local29--;
				local41 -= local29 << 1;
			}
			local10++;
			@Pc(135) int[] local135;
			@Pc(142) int[] local142;
			@Pc(146) int local146;
			@Pc(151) int local151;
			@Pc(191) int local191;
			@Pc(195) int local195;
			@Pc(200) int local200;
			if (local27 >= 0) {
				local24--;
				if (local24 >= local15) {
					local135 = Static267.anIntArrayArray38[arg2 + local24];
					local142 = Static267.anIntArrayArray38[arg2 - local24];
					local146 = local10 + arg4;
					local151 = arg4 - local10;
					Static264.method4096(local135, arg0, local146, local151);
					Static264.method4096(local142, arg0, local146, local151);
				} else {
					local135 = Static267.anIntArrayArray38[arg2 + local24];
					local142 = Static267.anIntArrayArray38[arg2 - local24];
					local146 = Static41.anIntArray129[local24];
					local151 = arg4 + local10;
					local191 = arg4 - local10;
					local195 = arg4 + local146;
					local200 = arg4 - local146;
					Static264.method4096(local135, arg0, local200, local191);
					Static264.method4096(local135, arg3, local195, local200);
					Static264.method4096(local135, arg0, local151, local195);
					Static264.method4096(local142, arg0, local200, local191);
					Static264.method4096(local142, arg3, local195, local200);
					Static264.method4096(local142, arg0, local151, local195);
				}
				local27 -= local24 << 1;
			}
			local135 = Static267.anIntArrayArray38[arg2 + local10];
			local142 = Static267.anIntArrayArray38[arg2 - local10];
			local146 = local24 + arg4;
			local151 = arg4 - local24;
			if (local10 < local15) {
				local191 = local29 >= local10 ? local29 : Static41.anIntArray129[local10];
				local195 = local191 + arg4;
				local200 = arg4 - local191;
				Static264.method4096(local135, arg0, local200, local151);
				Static264.method4096(local135, arg3, local195, local200);
				Static264.method4096(local135, arg0, local146, local195);
				Static264.method4096(local142, arg0, local200, local151);
				Static264.method4096(local142, arg3, local195, local200);
				Static264.method4096(local142, arg0, local146, local195);
			} else {
				Static264.method4096(local135, arg0, local146, local151);
				Static264.method4096(local142, arg0, local146, local151);
			}
		}
	}
}
